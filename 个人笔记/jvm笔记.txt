常见的垃圾回收算法：
	1、引用计数：通过引用计数来判断一个对象是否可以回收
	2、复制：Java堆从GC的角度还可以细分为: 新生代(Eden 区、From Survivor 区和To Survivor 区)和老年代。
	3、标记清除：算法分成标记和清除两个阶段，先标记出要回收的对象，然后统一回收这些对象。
	4、标记清除压缩

如何判断一个对象是否可以被回收?
	1、引用计数法
	2、枚举根节点做可达性分析(根搜索路径)

GC roots：
	所谓“GC roots”或者说tracing GC的“根集合”就是一组必须活跃的引用。基本思路就是通过一系列名为”GC Roots”的对象作为起始点，
         从这个被称为GC Roots的对象开始向下搜索，如果一个对象到GC Roots没有任何引用链相连时，则说明此对象不可用。也即给定一个集合的引用作为根出发，
         通过引用关系遍历对象图，能被遍历到的（可到达的）对象就被判定为存活;没有被遍历到的就自然被判定为死亡。

Java中可以作为GC Roots的对象
	1、虚拟机栈（栈帧中的局部变量区，也叫做局部变量表）中引用的对象。
	2、方法区中的类静态属性引用的对象。
	3、方法区中常量引用的对象。
	4、本地方法栈中JNI(Native方法)引用的对象。

JVM参数类型：
	1、标配参数：
		java -version、java -help、java - showversion等
	2、X参数（了解）
		-Xint：解释执行
		-Xcomp：第一次使用就编译成本地代码
		-Xmixed：混合模式
	3、XX参数（重点）
		boolean类型：-XX:+属性值  或者 -XX:-属性值。+代表开启，-代表关闭
		kv键值对类型：
